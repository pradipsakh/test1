#!groovy


properties([
    parameters([
        booleanParam(name: 'VERIFY_RUN', defaultValue: 'false', description: 'This box must be checked in order to run the job.'),
    //    string(name: 'grp', defaultValue: '', description: 'REQUIRED -- The Ansible Group Name. Use "non_prod" if patching non-production servers, and "prod" if patching production servers.', trip: true)
        [$class: 'ChoiceParameter', 
            choiceType: 'PT_SINGLE_SELECT', 
            description: 'Select the BootGroup From the list', 
            name: 'grp',
            filterLength: 1,
            filterable: false,
            randomName: 'choice-parameter-3702576813509115',
            script: [
                $class: 'GroovyScript', 
                fallbackScript: [
                    classpath: [], 
                    sandbox: true, 
                    script: 
                        'return[\'Could not read the ${env.WORKSPACE}/src directory\']'
                ], 
                script: [
                    classpath: [], 
                    sandbox: true, 
                    script: 
                        '''
                               def files = findFiles(glob: 'test/*') 
                                def bootParamsOpts = []
                                files.each{ f -> 
                                    bootParamsOpts << f.name
                                }
                        	return bootParamsOpts
                        '''
                ]
            ]
        ]
    ]),
    disableConcurrentBuilds()
])

node() {
    timestamps {
        try {
            stage('Execute Script') {
                if (params.VERIFY_RUN) {
				checkout scm
			datas = readYaml file: "env.yml"
                     
                        def servicelines = datas.services.readLines()

                        def validationlines = datas.validate.readLines()

                        def bootlines = datas.boot.readLines()

                        def clusterchklines = datas.clusterchk.readLines()

                } else {
                    echo('The VERIFY_RUN Flag must be checked.')
                    currentBuild.result = "FAILURE"
                }
            }
        } catch (err) {
            currentBuild.result = "FAILURE"
            throw err
        }
    }
}
